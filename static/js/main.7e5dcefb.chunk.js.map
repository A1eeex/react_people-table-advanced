{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","pages/ErrorPage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","types/Sex.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","cn","App","HomePage","ErrorPage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","Sex","PeopleFilters","setSearchParams","query","get","centuries","getAll","sex","Male","Female","onChange","event","preventDefault","target","type","placeholder","map","century","includes","filter","c","length","Loader","PersonLink","person","slug","name","PeopleTable","people","findPerson","parentName","find","selectedName","useParams","sort","isReversed","order","fatherPerson","fatherName","motherPerson","motherName","born","died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","normalizeQuery","toLowerCase","trim","useEffect","getPeople","currentPeople","catch","finally","filterAll","item","a","b","localeCompare","reverse","centruryBorn","Math","ceil","filterTable","Root","path","element","index","replace","container","document","getElementById","createRoot","render"],"mappings":"yQAGaA,EAAS,WAOpB,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASE,GAAG,IAAIF,UAfG,SAAC,GAAyC,IAAvCG,EAAsC,EAAtCA,SAC5B,OAAOC,IAAG,cAAe,CACvB,8BAA+BD,GAElC,EAWO,kBAIA,cAAC,IAAD,CACED,GAAG,UACHF,UAAW,YAAmB,IAAhBG,EAAe,EAAfA,SACZ,OAAOC,IAAG,cAAe,CACvB,8BAA+BD,GAElC,EANH,0BAcT,ECjCYE,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,qBAAKL,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,ECZcM,EAJE,WACf,OAAO,oBAAIN,UAAU,QAAd,sBACR,ECEcO,EAJG,WAChB,OAAO,oBAAIP,UAAU,QAAd,2BACR,E,sCCMM,SAASQ,EACdC,EACAC,GAGA,IAAMC,EAAY,IAAIC,gBACpBH,EAAcI,YA+BhB,OAjBAC,OAAOC,QAAQL,GACZM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACX,OAAVA,EACFP,EAAUQ,OAAOF,GACRG,MAAMC,QAAQH,IAEvBP,EAAUQ,OAAOF,GAEjBC,EAAMF,SAAQ,SAAAM,GACZX,EAAUY,OAAON,EAAKK,EACvB,KAEDX,EAAUa,IAAIP,EAAKC,EAEtB,IAGIP,EAAUE,UAClB,C,4BC/BYY,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACGC,EACC,iBACJ,EAAuBC,cAAhBC,EAAP,oBAEA,OACE,cAAC,IAAD,yBAIE5B,GAAI,CACF6B,OAAQvB,EAAcsB,EAAcH,KAElCC,GAPN,aASGF,IAGN,ECnCWM,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,UAAYA,EAAZ,SAAYA,EAAZ,WAAYA,CAAZ,MCMaC,EAAgB,WAC3B,MAAwCJ,cAAxC,mBAAOC,EAAP,KAAqBI,EAArB,KAEMC,EAAQL,EAAaM,IAAI,UAAY,GACrCC,EAAYP,EAAaQ,OAAO,YAAc,GAC9CC,EAAMT,EAAaM,IAAI,OAc7B,OACE,sBAAKpC,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,aAAa,UAAQ,YAAlC,UACE,cAAC,EAAD,CACEA,UAAWI,IAAG,CACZ,aAAcmC,IAEhBZ,OAAQ,CACNY,IAAK,MALT,iBAUA,cAAC,EAAD,CACEvC,UAAWI,IAAG,CACZ,YAAamC,IAAQP,EAAIQ,OAE3Bb,OAAQ,CACNY,IAAKP,EAAIQ,MALb,kBAUA,cAAC,EAAD,CACExC,UAAWI,IAAG,CACZ,YAAamC,IAAQP,EAAIS,SAE3Bd,OAAQ,CACNY,IAAKP,EAAIS,QALb,uBAYF,qBAAKzC,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEkB,MAAOiB,EACPO,SApDgB,SACxBC,GAEAA,EAAMC,iBAEN,IAAMjB,EAAS,IAAIf,gBAAgBkB,GAEnCH,EAAOH,IAAI,QAASmB,EAAME,OAAO3B,OACjCgB,EAAgBP,EACjB,EA4CS,UAAQ,aACRmB,KAAK,SACL9C,UAAU,QACV+C,YAAY,WAGd,sBAAM/C,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,gBAK/C,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiC,UAAQ,gBAAxD,UACE,qBAAKA,UAAU,aAAf,SArEY,CAAC,KAAM,KAAM,KAAM,KAAM,MAsEtBgD,KAAI,SAACC,GAChB,OACE,cAAC,EAAD,CAEEtB,OAAQ,CACNsB,QAASZ,EAAUa,SAASD,GACxBZ,EAAUc,QAAO,SAACC,GAAD,OAAOA,IAAMH,CAAb,IADZ,sBAEDZ,GAFC,CAEUY,KAErB,UAAQ,UACRjD,UAAWI,IAAG,SAAU,OAAQ,CAC9B,UAAWiC,EAAUa,SAASD,KATlC,SAYGA,GAXIA,EAcV,MAEH,qBAAKjD,UAAU,mBAAf,SACE,cAAC,EAAD,CACE2B,OAAQ,CACNsB,QAAS,MAEX,UAAQ,aACRjD,UAAWI,IAAG,oBAAqB,CACjC,cAAeiC,EAAUgB,SAN7B,wBAeN,qBAAKrD,UAAU,cAAf,SACE,cAAC,EAAD,CACEA,UAAU,0CACV2B,OAAQ,CACNY,IAAK,KACLU,QAAS,KACTd,MAAO,MALX,mCAaP,ECjIYmB,G,MAAS,kBACpB,qBAAKtD,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCoBPuD,EAbqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrC,OACE,cAAC,IAAD,CACEtD,GAAE,aAAQsD,EAAOC,MACjBzD,UAAWI,IAAG,CACZ,kBAAkC,MAAfoD,EAAOjB,MAH9B,SAMGiB,EAAOE,MAGb,ECVYC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,SAASC,EAAWC,GAClB,OAAOF,EAAOG,MAAK,SAACP,GAAD,OAAYA,EAAOE,OAASI,CAA5B,GACpB,CAED,IAAQE,EAAiBC,cAAjBD,aACR,EAAuBnC,cAAhBC,EAAP,oBACMoC,EAAOpC,EAAaM,IAAI,SAAW,GACnC+B,EAA2C,SAA9BrC,EAAaM,IAAI,SAEpC,OACE,wBACE,UAAQ,cACRpC,UAAU,uDAFZ,UAIE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CACE2B,OAAQ,CACNuC,KAAe,SAATA,GAAmBC,EAAa,KAAO,OAC7CC,MAAgB,SAATF,GAAoBC,EAAsB,KAAT,QAH5C,SAME,sBAAMnE,UAAU,OAAhB,SACE,mBACEA,UAAWI,IAAG,MAAO,CACnB,UAAoB,SAAT8D,EACX,aAAuB,SAATA,IAAoBC,EAClC,eAAyB,SAATD,GAAmBC,eAQ/C,6BACE,uBAAMnE,UAAU,8BAAhB,gBAEE,cAAC,EAAD,CACE2B,OAAQ,CACNuC,KAAe,QAATA,GAAkBC,EAAa,KAAO,MAC5CC,MAAgB,QAATF,GAAmBC,EAAsB,KAAT,QAH3C,SAME,sBAAMnE,UAAU,OAAhB,SACE,mBACEA,UAAWI,IAAG,MAAO,CACnB,UAAoB,QAAT8D,EACX,aAAuB,QAATA,IAAmBC,EACjC,eAAyB,QAATD,GAAkBC,eAQ9C,6BACE,uBAAMnE,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CACE2B,OAAQ,CACNuC,KAAe,SAATA,GAAmBC,EAAa,KAAO,OAC7CC,MAAgB,SAATF,GAAoBC,EAAsB,KAAT,QAH5C,SAME,sBAAMnE,UAAU,OAAhB,SACE,mBACEA,UAAWI,IAAG,MAAO,CACnB,UAAoB,SAAT8D,EACX,aAAuB,SAATA,IAAoBC,EAClC,eAAyB,SAATD,GAAmBC,eAQ/C,6BACE,uBAAMnE,UAAU,8BAAhB,iBAEE,cAAC,EAAD,CACE2B,OAAQ,CACNuC,KAAe,SAATA,GAAmBC,EAAa,KAAO,OAC7CC,MAAgB,SAATF,GAAoBC,EAAsB,KAAT,QAH5C,SAME,sBAAMnE,UAAU,OAAhB,SACE,mBACEA,UAAWI,IAAG,MAAO,CACnB,UAAoB,SAAT8D,EACX,aAAuB,SAATA,IAAoBC,EAClC,eAAyB,SAATD,GAAmBC,eAQ/C,wCACA,6CAIJ,uCACGP,QADH,IACGA,OADH,EACGA,EAAQZ,KAAI,SAACQ,GACZ,IAAMa,EAAeR,EAAWL,EAAOc,YACjCC,EAAeV,EAAWL,EAAOgB,YAEvC,OACE,qBAEE,UAAQ,SACRxE,UAAWI,IAAG,CACZ,yBAA0B4D,IAAiBR,EAAOC,OAJtD,UAOE,6BACE,cAAC,EAAD,CAAYD,OAAQA,MAGtB,6BAAKA,EAAOjB,MACZ,6BAAKiB,EAAOiB,OACZ,6BAAKjB,EAAOkB,OAEZ,6BACGH,EACC,cAAC,EAAD,CAAYf,OAAQe,IAEpBf,EAAOgB,YAAc,MAIzB,6BACGH,EACC,cAAC,EAAD,CAAYb,OAAQa,IAEpBb,EAAOc,YAAc,QA1BpBd,EAAOC,KA+BjB,QAIR,E,cC/JKkB,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,C,sDAEM,iHAEED,EAAK,KACTK,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,KAJX,4C,sBCAA,IAAMC,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAO1B,EAAP,KAAe2B,EAAf,KACA,EAAkCD,oBAAkB,GAApD,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,mBAAiB,IAAzD,mBAAOI,EAAP,KAAqBC,EAArB,KAEA,EAAuB9D,cAAhBC,EAAP,oBACMK,EAAQL,EAAaM,IAAI,UAAY,GACrCG,EAAMT,EAAaM,IAAI,QAAU,GACjC8B,EAAOpC,EAAaM,IAAI,SAAW,GACnCgC,EAAQtC,EAAaM,IAAI,UAAY,GACrCa,EAAUnB,EAAaQ,OAAO,YAAc,GAC5CsD,EAAiBzD,EAAM0D,cAAcC,OA6D3C,OA3DAC,qBAAU,WACRN,GAAa,GDdV,WAAP,+BCeIO,GACGf,MAAK,SAACgB,GACLV,EAAUU,EACX,IACAC,OAAM,WACLP,EAAgB,uBACjB,IACAQ,SAAQ,WACPV,GAAa,EACd,GACJ,GAAE,IAgDD,qCACE,oBAAIzF,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,sBAAf,UACGwF,GAAa,cAAC,EAAD,IAEbE,GACC,mBAAG,UAAQ,qBAAqB1F,UAAU,kBAA1C,SACG0F,KAIH9B,EAAOP,SAAWmC,IAAcE,GAChC,mBAAG,UAAQ,kBAAX,+CAID9B,EAAOP,OAAS,IAAMmC,IAAcE,GACnC,cAAC,EAAD,CAAa9B,OAvE3B,WACE,IAIMwC,EAJexC,EAAOT,QAAO,SAACkD,GAClC,OAAOA,EAAK3C,KAAKmC,cAAc3C,SAAS0C,EACzC,IAGEzC,QAAO,SAACkD,GACP,OAAQ9D,GACN,KAAKP,EAAIQ,KACP,OAAO6D,EAAK9D,MAAQP,EAAIQ,KAC1B,KAAKR,EAAIS,OACP,OAAO4D,EAAK9D,MAAQP,EAAIS,OAC1B,QACE,OAAO4D,EAEZ,IACAnC,MAAK,SAACoC,EAAGC,GACR,OAAQrC,GACN,IAAK,OACL,IAAK,MACH,OAAOoC,EAAEpC,GAAMsC,cAAcD,EAAErC,IACjC,IAAK,OACH,OAAOoC,EAAE7B,KAAO8B,EAAE9B,KACpB,IAAK,OACH,OAAO6B,EAAE5B,KAAO6B,EAAE7B,KACpB,QACE,OAAO,EAEZ,IAMH,MAJc,SAAVN,GACFgC,EAAUK,UAGRxD,EAAQI,OACH+C,EAAUjD,QAAO,SAACK,GACvB,IAAMkD,EAAeC,KAAKC,KAAKpD,EAAOiB,KAAO,KAE7C,OAAOxB,EAAQC,SAASwD,EAAa7F,WACtC,IAGIuF,CACR,CA4BkCS,iBAQpC,ECtFcC,EAlBF,WACX,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU9G,GAAG,IAAIgH,SAAO,MAEpD,cAAC,IAAD,CAAOH,KAAK,SAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,iBAAiBC,QAAS,cAAC,EAAD,cAMjD,ECrBKG,EAAYC,SAASC,eAAe,QAE1CC,qBAAWH,GAAWI,OAAO,cAAC,EAAD,I","file":"static/js/main.7e5dcefb.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const getActiveLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getActiveLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => {\n              return cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              });\n            }}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n\nexport default HomePage;\n","const ErrorPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n\nexport default ErrorPage;\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","export enum Sex {\n  All = 'all',\n  Male = 'm',\n  Female = 'f',\n}\n","// import { useState } from 'react';\nimport cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\nimport { Sex } from '../types/Sex';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const { pathname, search } = useLocation();\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('century') || [];\n  const sex = searchParams.get('sex');\n  const centurysArr = ['16', '17', '18', '19', '20'];\n\n  const handleQueryChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    event.preventDefault();\n\n    const params = new URLSearchParams(searchParams);\n\n    params.set('query', event.target.value);\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': !sex,\n          })}\n          params={{\n            sex: null,\n          }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': sex === Sex.Male,\n          })}\n          params={{\n            sex: Sex.Male,\n          }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': sex === Sex.Female,\n          })}\n          params={{\n            sex: Sex.Female,\n          }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            value={query}\n            onChange={handleQueryChange}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centurysArr.map((century) => {\n              return (\n                <SearchLink\n                  key={century}\n                  params={{\n                    century: centuries.includes(century)\n                      ? centuries.filter((c) => c !== century)\n                      : [...centuries, century],\n                  }}\n                  data-cy=\"century\"\n                  className={cn('button', 'mr-1', {\n                    'is-info': centuries.includes(century),\n                  })}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{\n                century: null,\n              }}\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length,\n              })}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null,\n            century: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nconst PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n\nexport default PersonLink;\n","import { useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport PersonLink from './PersonLink';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  function findPerson(parentName: string | null): Person | undefined {\n    return people.find((person) => person.name === parentName);\n  }\n\n  const { selectedName } = useParams();\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const isReversed = searchParams.get('order') === 'desc';\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={{\n                  sort: sort === 'name' && isReversed ? null : 'name',\n                  order: sort === 'name' && !isReversed ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('fas', {\n                      'fa-sort': sort !== 'name',\n                      'fa-sort-up': sort === 'name' && !isReversed,\n                      'fa-sort-down': sort === 'name' && isReversed,\n                    })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={{\n                  sort: sort === 'sex' && isReversed ? null : 'sex',\n                  order: sort === 'sex' && !isReversed ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('fas', {\n                      'fa-sort': sort !== 'sex',\n                      'fa-sort-up': sort === 'sex' && !isReversed,\n                      'fa-sort-down': sort === 'sex' && isReversed,\n                    })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={{\n                  sort: sort === 'born' && isReversed ? null : 'born',\n                  order: sort === 'born' && !isReversed ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('fas', {\n                      'fa-sort': sort !== 'born',\n                      'fa-sort-up': sort === 'born' && !isReversed,\n                      'fa-sort-down': sort === 'born' && isReversed,\n                    })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={{\n                  sort: sort === 'died' && isReversed ? null : 'died',\n                  order: sort === 'died' && !isReversed ? 'desc' : null,\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('fas', {\n                      'fa-sort': sort !== 'died',\n                      'fa-sort-up': sort === 'died' && !isReversed,\n                      'fa-sort-down': sort === 'died' && isReversed,\n                    })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map((person) => {\n          const fatherPerson = findPerson(person.fatherName);\n          const motherPerson = findPerson(person.motherName);\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={cn({\n                'has-background-warning': selectedName === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n\n              <td>\n                {motherPerson ? (\n                  <PersonLink person={motherPerson} />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {fatherPerson ? (\n                  <PersonLink person={fatherPerson} />\n                ) : (\n                  person.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Sex } from '../types/Sex';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  const century = searchParams.getAll('century') || [];\n  const normalizeQuery = query.toLowerCase().trim();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((currentPeople) => {\n        setPeople(currentPeople);\n      })\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  function filterTable() {\n    const filterSearch = people.filter((item) => {\n      return item.name.toLowerCase().includes(normalizeQuery);\n    });\n\n    const filterAll = filterSearch\n      .filter((item) => {\n        switch (sex) {\n          case Sex.Male:\n            return item.sex === Sex.Male;\n          case Sex.Female:\n            return item.sex === Sex.Female;\n          default:\n            return item;\n        }\n      })\n      .sort((a, b) => {\n        switch (sort) {\n          case 'name':\n          case 'sex':\n            return a[sort].localeCompare(b[sort]);\n          case 'born':\n            return a.born - b.born;\n          case 'died':\n            return a.died - b.died;\n          default:\n            return 0;\n        }\n      });\n\n    if (order === 'desc') {\n      filterAll.reverse();\n    }\n\n    if (century.length) {\n      return filterAll.filter((person) => {\n        const centruryBorn = Math.ceil(person.born / 100);\n\n        return century.includes(centruryBorn.toString());\n      });\n    }\n\n    return filterAll;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {errorMessage}\n                </p>\n              )}\n\n              {!people.length && !isLoading && !errorMessage && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              {people.length > 0 && !isLoading && !errorMessage && (\n                <PeopleTable people={filterTable()} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport HomePage from './pages/HomePage';\nimport ErrorPage from './pages/ErrorPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nconst Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<ErrorPage />} />\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route path=\":selectedName?\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n\nexport default Root;\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport Root from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container).render(<Root />);\n"],"sourceRoot":""}